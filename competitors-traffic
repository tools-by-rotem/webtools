<!DOCTYPE html>
<html dir="rtl" lang="he">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>מחשבון תנועה אורגנית לאתרים מתחרים</title>
    <style>
        :root {
            --primary-color: #6366f1;
            --primary-hover: #4f46e5;
            --secondary-color: #f9fafb;
            --text-color: #1f2937;
            --light-text: #6b7280;
            --success-color: #10b981;
            --card-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.05);
            --input-border: #e5e7eb;
            --tooltip-bg: #374151;
            --error-color: #ef4444;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            background-image: linear-gradient(135deg, #f5f5f5 0%, #e0e7ff 100%);
            margin: 0;
            padding: 0;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            direction: rtl;
            color: var(--text-color);
        }
        
        .container {
            width: 90%;
            max-width: 500px;
            background-color: white;
            border-radius: 16px;
            box-shadow: var(--card-shadow);
            padding: 32px;
            margin: 20px;
            position: relative;
            overflow: hidden;
        }
        
        .container::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 6px;
            background: linear-gradient(90deg, var(--primary-color), #a78bfa);
        }
        
        h1 {
            color: var(--text-color);
            margin-top: 0;
            margin-bottom: 32px;
            font-size: 24px;
            font-weight: 700;
            text-align: center;
        }
        
        .form-group {
            margin-bottom: 24px;
            position: relative;
        }
        
        label {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text-color);
            font-size: 14px;
        }
        
        .tooltip {
            position: relative;
            display: inline-block;
            margin-right: 8px;
            cursor: help;
        }
        
        .tooltip-icon {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 18px;
            height: 18px;
            background-color: #e5e7eb;
            color: #6b7280;
            border-radius: 50%;
            font-size: 12px;
            font-weight: bold;
        }
        
        .tooltip-text {
            visibility: hidden;
            width: 240px;
            background-color: var(--tooltip-bg);
            color: white;
            text-align: center;
            border-radius: 6px;
            padding: 10px;
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            margin-left: -120px;
            opacity: 0;
            transition: opacity 0.3s;
            font-weight: normal;
            font-size: 12px;
            line-height: 1.5;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
        
        .tooltip-text::after {
            content: "";
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -5px;
            border-width: 5px;
            border-style: solid;
            border-color: var(--tooltip-bg) transparent transparent transparent;
        }
        
        .tooltip:hover .tooltip-text {
            visibility: visible;
            opacity: 1;
        }
        
        input[type="number"] {
            width: 100%;
            padding: 12px 16px;
            border: 1px solid var(--input-border);
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.2s;
            background-color: var(--secondary-color);
            box-sizing: border-box;
        }
        
        input[type="number"]:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.15);
        }
        
        input.error {
            border-color: var(--error-color);
        }
        
        .error-message {
            color: var(--error-color);
            font-size: 12px;
            margin-top: 4px;
            display: none;
        }
        
        .error-message.active {
            display: block;
            animation: fadeIn 0.3s;
        }
        
        .checkbox-container {
            display: flex;
            align-items: center;
            margin-bottom: 24px;
        }
        
        .checkbox-container input[type="checkbox"] {
            margin-left: 8px;
            width: 18px;
            height: 18px;
            cursor: pointer;
        }
        
        button {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 14px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            display: block;
            width: 100%;
            transition: all 0.2s;
            margin-top: 16px;
        }
        
        button:hover {
            background-color: var(--primary-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(79, 70, 229, 0.2);
        }
        
        .result-container {
            margin-top: 32px;
            padding: 24px;
            background-color: #f3f4f6;
            border-radius: 12px;
            display: none;
            animation: fadeIn 0.5s;
            border-right: 4px solid var(--success-color);
            text-align: center;
        }
        
        .result-container.active {
            display: block;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .traffic-number {
            font-size: 42px;
            font-weight: 700;
            color: var(--success-color);
            margin: 16px 0;
            display: block;
        }
        
        .traffic-label {
            display: block;
            font-size: 16px;
            color: var(--light-text);
            margin-bottom: 16px;
        }
        
        .ads-note {
            margin-top: 12px;
            font-size: 14px;
            color: var(--light-text);
            display: none;
        }
        
        .ads-note.active {
            display: block;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>מחשבון תנועה אורגנית לאתרים מתחרים</h1>
        
        <div class="form-group">
            <label for="current-rank">
                דירוג האתר הנוכחי (1-10)
                <div class="tooltip">
                    <div class="tooltip-icon">?</div>
                    <span class="tooltip-text">הזינו את המיקום הנוכחי של האתר שלכם בתוצאות החיפוש של גוגל. מספר בין 1 ל-10 כאשר 1 הוא המיקום הראשון בדף התוצאות.</span>
                </div>
            </label>
            <input type="number" id="current-rank" min="1" max="10" oninput="validateRankInput(this, 'current-rank-error')">
            <div id="current-rank-error" class="error-message">יש להזין מספר בין 1 ל-10</div>
        </div>
        
        <div class="form-group">
            <label for="target-rank">
                הדירוג הרצוי (1-10)
                <div class="tooltip">
                    <div class="tooltip-icon">?</div>
                    <span class="tooltip-text">הזינו את המיקום הרצוי אליו אתם שואפים להגיע בתוצאות החיפוש. מספר בין 1 ל-10 כאשר 1 הוא המיקום הראשון בדף התוצאות.</span>
                </div>
            </label>
            <input type="number" id="target-rank" min="1" max="10" oninput="validateRankInput(this, 'target-rank-error')">
            <div id="target-rank-error" class="error-message">יש להזין מספר בין 1 ל-10</div>
        </div>
        
        <div class="form-group">
            <label for="current-traffic">
                התנועה האורגנית הנוכחית
                <div class="tooltip">
                    <div class="tooltip-icon">?</div>
                    <span class="tooltip-text">הזינו את מספר הכניסות האורגניות החודשיות הנוכחיות לאתר שלכם ממונח החיפוש הספציפי. ניתן לקבל נתון זה מכלים כמו גוגל אנליטיקס או גוגל סרץ' קונסול.</span>
                </div>
            </label>
            <input type="number" id="current-traffic" min="1">
        </div>
        
        <div class="checkbox-container">
            <input type="checkbox" id="has-ads" onchange="updateAdsImpact()">
            <label for="has-ads">
                בעמוד מופיעות מודעות
                <div class="tooltip">
                    <div class="tooltip-icon">?</div>
                    <span class="tooltip-text">סמנו את האפשרות אם בדף תוצאות החיפוש של המונח שלכם מופיעות מודעות. המחשבון יקח בחשבון ש-2% מהגולשים לוחצים על מודעות במקום על תוצאות אורגניות.</span>
                </div>
            </label>
        </div>
        
        <button onclick="calculateTraffic()">חישוב תנועה צפויה</button>
        
        <div id="result" class="result-container">
            <span class="traffic-label">התנועה הצפויה בדירוג <span id="target-rank-display"></span></span>
            <span id="traffic-result" class="traffic-number"></span>
            <span class="traffic-label">כניסות בחודש</span>
            <div id="ads-note" class="ads-note"></div>
        </div>
    </div>

    <script>
        function validateRankInput(input, errorId) {
            const value = parseInt(input.value);
            const errorElement = document.getElementById(errorId);
            
            if (isNaN(value) || value < 1 || value > 10) {
                input.classList.add('error');
                errorElement.classList.add('active');
                return false;
            } else {
                input.classList.remove('error');
                errorElement.classList.remove('active');
                return true;
            }
        }
        
        function updateAdsImpact() {
            const hasAds = document.getElementById('has-ads').checked;
            const adsNote = document.getElementById('ads-note');
            
            if (hasAds) {
                adsNote.classList.add('active');
            } else {
                adsNote.classList.remove('active');
            }
        }
        
        function calculateTraffic() {
    const originalCtrValues = {
        1: 21,
        2: 14,
        3: 13,
        4: 9,
        5: 9,
        6: 6,
        7: 7,
        8: 6,
        9: 5,
        10: 8
    };
    
    const currentRankInput = document.getElementById('current-rank');
    const targetRankInput = document.getElementById('target-rank');
    const currentTrafficInput = document.getElementById('current-traffic');
    const hasAds = document.getElementById('has-ads').checked;
    
    const currentRank = parseInt(currentRankInput.value);
    const targetRank = parseInt(targetRankInput.value);
    const currentTraffic = parseInt(currentTrafficInput.value);
    
    const isCurrentRankValid = validateRankInput(currentRankInput, 'current-rank-error');
    const isTargetRankValid = validateRankInput(targetRankInput, 'target-rank-error');
    
    if (!isCurrentRankValid || !isTargetRankValid || isNaN(currentTraffic) || currentTraffic < 1) {
        if (isNaN(currentTraffic) || currentTraffic < 1) {
            alert('אנא הזינו ערך חיובי בשדה כמות התנועה האורגנית הנוכחית');
        }
        return;
    }
    
    const currentCTR = originalCtrValues[currentRank];
    const targetCTR = originalCtrValues[targetRank];
    
    const trafficRatio = targetCTR / currentCTR;
    
    let expectedTraffic = Math.round(trafficRatio * currentTraffic);
    
    if (hasAds) {
        expectedTraffic = Math.round(expectedTraffic * 0.98);
        document.getElementById('ads-note').classList.add('active');
    } else {
        document.getElementById('ads-note').classList.remove('active');
    }
    
    document.getElementById('target-rank-display').textContent = targetRank;
    document.getElementById('traffic-result').textContent = expectedTraffic.toLocaleString();
    
    document.getElementById('result').classList.add('active');
}
        
        document.addEventListener('DOMContentLoaded', function() {
            const currentRankInput = document.getElementById('current-rank');
            const targetRankInput = document.getElementById('target-rank');
            
            currentRankInput.addEventListener('input', function() {
                validateRankInput(this, 'current-rank-error');
            });
            
            targetRankInput.addEventListener('input', function() {
                validateRankInput(this, 'target-rank-error');
            });
        });
    </script>
</body>
</html>
